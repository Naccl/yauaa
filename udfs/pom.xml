<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Yet Another UserAgent Analyzer
  ~ Copyright (C) 2013-2022 Niels Basjes
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ https://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>yauaa-parent</artifactId>
    <groupId>nl.basjes.parse.useragent</groupId>
    <version>7.5.1-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <packaging>pom</packaging>

  <artifactId>yauaa-udf-parent</artifactId>
  <name>Yauaa : UDF : </name>

  <!-- ================================================================================================ -->
  <!-- These 3 dependencies are excluded by all UDFs because of dependency/shading/ relocating problems -->
  <!-- But they do need them for the compilation and testing ... -->
  <!-- Documentation of the used shading construct: https://yauaa.basjes.nl/NOTES-shading-dependencies.html -->
  <dependencyManagement>
    <dependencies>

      <dependency>
        <groupId>nl.basjes.parse.useragent</groupId>
        <artifactId>yauaa</artifactId>
        <version>${project.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.antlr</groupId>
            <artifactId>antlr4-runtime</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <dependencies>

    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr4-runtime</artifactId>
      <version>${antlr.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${spring.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.yaml</groupId>
      <artifactId>snakeyaml</artifactId>
      <version>${snakeyaml.version}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <!-- ======================================================= -->

  <modules>
    <module>logparser</module>
    <module>flink</module>
    <module>flink-table</module>
    <module>beam</module>
    <module>beam-sql</module>
    <module>hive</module>
    <module>drill</module>
    <module>nifi</module>
    <module>elastic</module>
    <module>snowflake</module>
    <module>trino</module>
  </modules>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>${maven-enforcer-plugin.version}</version>
        <executions>
          <execution>
            <id>dependency-convergence</id>
            <!-- Disable the dependency-convergence for the UDFs                -->
            <!-- The transient dependencies cause almost all to fail over this. -->
            <phase>none</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <dependencyConvergence />
              </rules>
              <skip>true</skip>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- FIXME: Explicitly disabling the -Werror option because of this (unsolved) problem. -->
      <!-- [INFO] - maven-compiler-plugin:3.10.1:testCompile (default-testCompile) @ yauaa-flink-table -                                                      -->
      <!-- [INFO] Toolchain in maven-compiler-plugin: JDK[/usr/lib/jvm/java-11-openjdk-amd64]                                                                 -->
      <!-- [INFO] Changes detected - recompiling the module!                                                                                                  -->
      <!-- [INFO] Compiling 3 source files to /home/nbasjes/workspace/Prive/yauaa/udfs/flink-table/target/test-classes                                        -->
      <!-- [WARNING] [path] bad path element "/home/nbasjes/.m2/repository/org/scala-lang/scala-compiler/2.12.7/scala-reflect.jar": no such file or directory -->
      <!-- [WARNING] [path] bad path element "/home/nbasjes/.m2/repository/org/scala-lang/scala-compiler/2.12.7/scala-library.jar": no such file or directory -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <compilerArgs>
            <!-- Enable almost all warnings.-->
            <!-- Ignore 'classfile' to allow leaving Kryo out. -->
            <!-- Ignore 'processing' to avoid "No processor claimed any of these annotations" in several places. -->
            <!-- Ignore 'serial' warnings about not having a serialVersionUID -->
            <arg>-Xlint:all,-classfile,-processing,-serial</arg>
            <!-- <arg>-Werror</arg>-->
            <arg>-implicit:class</arg>
          </compilerArgs>
          <showWarnings>true</showWarnings>
          <showDeprecation>true</showDeprecation>
        </configuration>
      </plugin>

    </plugins>
  </build>

</project>
